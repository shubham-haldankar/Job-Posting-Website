{"version":3,"sources":["components/Header.js","components/Form.js","components/JobList.js","components/PostJob.js","components/Jobs.js","components/ViewJob.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Form","input","setInput","company","setCompany","location","setLocation","experience","setExperience","salary","setSalary","description","setDescription","jobs","setJobs","editJob","setEditJob","useEffect","title","comp","loc","exp","sal","jd","onSubmit","event","preventDefault","id","newJob","map","job","updateJob","uuidv4","type","placeholder","value","multiline","onChange","target","required","JobList","onClick","findJob","find","handleEdit","filter","handleDelete","App","initialState","JSON","parse","localStorage","getItem","useState","setItem","stringify","ViewJob","Jobs","Urls","path","children","Child","to","useParams","PostJob","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2a7a87f.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n\treturn(\n\t\t<div className=\"header\">\n\t\t    <h1>Post a Job</h1>\n\t\t</div>\n\t\t)\n}\n\nexport default Header;","import React, {useEffect} from 'react';\nimport {v4 as uuidv4} from \"uuid\";\nimport './Form.css';\n\nconst Form = ({input, setInput, company, setCompany, location, setLocation, experience, setExperience, salary, setSalary, description, setDescription, jobs, setJobs, editJob, setEditJob}) => {\n\tconst updateJob = (id, title, comp, loc, exp, sal, jd) => {\n\t\tconst newJob = jobs.map((job) => \n\t\t\tjob.id === id ? {id, title, comp, loc, exp, sal, jd} : job\n\t\t);\n\t\tsetJobs(newJob);\n\t\tsetEditJob(\"\");\n\t};\n\tuseEffect(() => {\n\t\tif(editJob){\n\t\t\tsetInput(editJob.title);\n\t\t\tsetCompany(editJob.comp);\n\t\t\tsetLocation(editJob.loc);\n\t\t\tsetExperience(editJob.exp);\n\t\t\tsetSalary(editJob.sal);\n\t\t\tsetDescription(editJob.jd);\n\t\t}else{\n\t\t\tsetInput(\"\");\n\t\t\tsetCompany(\"\");\n\t\t\tsetLocation(\"\");\n\t\t\tsetExperience(\"\");\n\t\t\tsetSalary(\"\");\n\t\t\tsetDescription(\"\");\n\t\t}\n\t}, [setInput, setCompany, setLocation, setExperience, setSalary, setDescription, editJob]);\n\n\tconst onInputChange = (event) =>{\n\t\tsetInput(event.target.value);\n\t};\n\n\tconst onCompanyChange = (event) =>{\n\t\tsetCompany(event.target.value);\n\t};\n\n\tconst onLocationChange = (event) =>{\n\t\tsetLocation(event.target.value);\n\t};\n\n\tconst onExperienceChange = (event) =>{\n\t\tsetExperience(event.target.value);\n\t};\n\n\tconst onSalaryChange = (event) =>{\n\t\tsetSalary(event.target.value);\n\t};\n\t\n\tconst onDescriptionChange = (event) => {\n\t\tsetDescription(event.target.value);\n\t};\n\n\tconst onFormSubmit = (event) =>{\n\t\tevent.preventDefault();\n\t\tif(!editJob){\n\t\t\tsetJobs([...jobs, {id: uuidv4(), title: input, comp: company, loc: location, exp: experience, sal:salary, jd: description}]);\n\t\t\tsetInput(\"\");\n\t\t\tsetCompany(\"\");\n\t\t\tsetLocation(\"\");\n\t\t\tsetExperience(\"\");\n\t\t\tsetSalary(\"\");\n\t\t\tsetDescription(\"\");\n\t\t} else {\n\t\t\tupdateJob(editJob.id, input, company, location, experience, salary, description);\n\t\t}\n\t};\n\treturn(\n\t\t<form onSubmit={onFormSubmit}>\n\t\t<textarea\n\t\t\t    type=\"text\" \n\t\t\t    placeholder=\"Write a Job Description\" \n\t\t\t    className=\"task-description\" \n\t\t\t    value={description} \n\t\t\t    multiline={true}\n\t\t\t    onChange={onDescriptionChange}\n\t\t\t/>\n\t\t\t<input \n\t\t\t    type=\"text\" \n\t\t\t    placeholder=\"Write a Job Title\" \n\t\t\t    className=\"task-input\" \n\t\t\t    value={input} \n\t\t\t    required \n\t\t\t    onChange={onInputChange}\n\t\t\t/>\n\t\t\t<input \n\t\t\t    type=\"text\" \n\t\t\t    placeholder=\"Write a Company Name\" \n\t\t\t    className=\"task-input\" \n\t\t\t    value={company} \n\t\t\t    required \n\t\t\t    onChange={onCompanyChange}\n\t\t\t/>\n\t\t\t<input \n\t\t\t    type=\"text\" \n\t\t\t    placeholder=\"Write a Job Location\" \n\t\t\t    className=\"task-input\" \n\t\t\t    value={location} \n\t\t\t    required \n\t\t\t    onChange={onLocationChange}\n\t\t\t/>\n\t\t\t<input \n\t\t\t    type=\"text\" \n\t\t\t    placeholder=\"Write a Experience Required\" \n\t\t\t    className=\"task-input\" \n\t\t\t    value={experience} \n\t\t\t    required \n\t\t\t    onChange={onExperienceChange}\n\t\t\t/>\n\t\t\t<input \n\t\t\t    type=\"text\" \n\t\t\t    placeholder=\"Write a Job Salary\" \n\t\t\t    className=\"task-input inblock\" \n\t\t\t    value={salary} \n\t\t\t    required \n\t\t\t    onChange={onSalaryChange}\n\t\t\t/>\n\t\t\t\n\t\t\t<button className=\"button-add\" type=\"submit\">\n\t\t\t\t<span>\n\t\t\t\t\t{editJob ? \"OK\" : \"Add\"}\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t</form>\n\t\t);\n};\n\nexport default Form;","import React from 'react';\nimport './JobList.css';\n\nconst JobList = ({jobs, setJobs, setEditJob}) => {\n\tconst handleEdit = ({id}) => {\n\t\tconst findJob = jobs.find((job) => job.id === id);\n\t\tsetEditJob(findJob);\n\t};\n\n\tconst handleDelete = ({id}) => {\n\t\tsetJobs(jobs.filter((job) => job.id !==id));\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{jobs.map((job) => (\n\t\t\t\t<li className=\"list-item\" key={job.id}>\n\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t    \t<button className=\"button-edit task-button\" onClick={() => handleEdit(job)}>\n\t\t\t\t        \t<i className=\"fa fa-edit\"></i>\n\t\t\t\t    \t</button>\n\t\t\t\t    \t<button className=\"button-delete task-button\" onClick={() => handleDelete(job)}>\n\t\t\t\t        \t<i className=\"fa fa-trash\"></i>\n\t\t\t\t    \t</button>\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<h3 className=\"display-job heading\">{job.title}</h3>\n\t\t\t\t\t<h3 className=\"display-job\">{job.comp}</h3>\n\t\t\t\t\t<p className=\"display-job\"><b>Location:</b> {job.loc}</p>\n\t\t\t\t\t<p className=\"display-job\"><b>Experience:</b> {job.exp}</p>\n\t\t\t\t\t<p className=\"display-job\"><b>Salary:</b> {job.sal}</p>\n\t\t\t\t\t<p><b>Job Description:</b></p>\n\t\t\t\t\t<p className=\"display-job-description\">{job.jd}</p>\n\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t)}\n\t\t</div>);\n};\n\nexport default JobList;","import React, {useState, useEffect} from 'react';\nimport Header from './Header';\nimport Form from './Form';\nimport JobList from './JobList';\n\nconst App = () => {\n\tconst initialState = JSON.parse(localStorage.getItem(\"jobs\")) || [];\n\tconst [input, setInput] = useState(\"\");\n\tconst [company, setCompany] = useState(\"\");\n\tconst [location, setLocation] = useState(\"\");\n\tconst [experience, setExperience] = useState(\"\");\n\tconst [salary, setSalary] = useState(\"\");\n\tconst [description, setDescription] = useState(\"\");\n\tconst [jobs, setJobs] = useState(initialState);\n\tconst [editJob, setEditJob] = useState(null);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"jobs\",JSON.stringify(jobs));\n\t}, [jobs]);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"app-wrapper\">\n\t\t\t\t<div>\n\t\t\t\t\t<Header/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t    <Form\n\t\t\t\t\tinput= {input}\n\t\t\t\t    setInput= {setInput}\n\t\t\t\t    company= {company}\n\t\t\t\t    setCompany= {setCompany}\n\t\t\t\t    location= {location}\n\t\t\t\t    setLocation= {setLocation}\n\t\t\t\t    experience= {experience}\n\t\t\t\t\tsetExperience= {setExperience}\n\t\t\t\t    salary= {salary}\n\t\t\t\t    setSalary= {setSalary}\n\t\t\t\t    description= {description}\n\t\t\t\t    setDescription= {setDescription}\n\t\t\t\t    jobs={jobs}\n\t\t\t\t    setJobs={setJobs}\n\t\t\t\t    editJob={editJob}\n\t\t\t\t    setEditJob={setEditJob}\n\t\t\t\t    />\n\t\t\t    </div>\n\t\t\t    <div>\n\t\t\t    \t<div className=\"header\">\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t<br/><br/>\n\t\t   \t\t\t\t<h1>Posted Jobs</h1>\n\t\t   \t\t\t</div>\n\t\t\t\t\t<JobList jobs={jobs} setJobs={setJobs} setEditJob={setEditJob}/>\n\t\t\t    </div>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n};\n\nexport default App;","import React from 'react';\n\nconst JobList = ({jobs, setJobs, setEditJob}) => {\n\treturn (\n\t\t<div>\n\t\t\t{jobs.map((job) => (\n\t\t\t\t<li className=\"list-item\" key={job.id}>\n\t\t\t\t\t<h3 className=\"display-job heading\">{job.title}</h3>\n\t\t\t\t\t<h3 className=\"display-job\">{job.comp}</h3>\n\t\t\t\t\t<p className=\"display-job\"><b>Location:</b> {job.loc}</p>\n\t\t\t\t\t<p className=\"display-job\"><b>Experience:</b> {job.exp}</p>\n\t\t\t\t\t<p className=\"display-job\"><b>Salary:</b> {job.sal}</p>\n\t\t\t\t\t<p><b>Job Description:</b></p>\n\t\t\t\t\t<p className=\"display-job-description\">{job.jd}</p>\n\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t)}\n\t\t</div>);\n};\n\nexport default JobList;","import React, {useState} from 'react';\nimport Jobs from './Jobs';\nimport './ViewJob.css';\n\nconst ViewJob = () => {\n\tconst initialState = JSON.parse(localStorage.getItem(\"jobs\")) || [];\n    const [jobs, setJobs] = useState(initialState);\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"app-wrapper display-list\">\n\t\t\t    <div className=\"header\">\n\t    \t\t\t<h1>Posted Jobs</h1>\n\t    \t\t</div>\n\t\t\t\t<Jobs jobs={jobs} setJobs={setJobs}/>\n\t\t\t</div>\n\t\t</div>\n\t\t)\n};\n\nexport default ViewJob;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from 'react-router-dom';\nimport PostJob from './components/PostJob';\nimport ViewJob from './components/ViewJob';\nimport './App.css';\n\nexport default function Urls() {\n\treturn(\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/:id\" children={<Child/>} />\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"app-wrapper change-height\">\n\t\t\t\t\t\t\t<h1>Job Posting Website</h1>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<h1><Link to=\"/post-a-job\">\n\t\t\t\t\t\t\t\t\t\t<button className=\"button-add list-item colored\" >\n\t\t\t\t\t\t\t\t<span>Post a Job</span>\n\t\t\t\t\t\t\t\t</button></Link></h1>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<h1><Link to=\"/view-jobs\"><button className=\"button-add list-item colored\">\n\t\t\t\t\t\t\t\t<span>View Jobs</span>\n\t\t\t\t\t\t\t\t</button></Link></h1>\n\t\t\t\t\t\t\t\t\t</li>\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</Switch>\n\t\t</Router>\n\t\t)\n}\n\nfunction Child() {\n\tlet {id} = useParams();\n\tif(id===\"post-a-job\"){\n\t\treturn <PostJob/>\n\t}else{\n\t\treturn <ViewJob/>\n\t}\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}